// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo.proto

package com.qhx.proto.event;

/**
 * <pre>
 * 参考系类型
 * 包括相对参考系与地球参考系，地球参考系包括椭球面经纬度坐标与地心地固笛卡尔坐标
 * </pre>
 *
 * Protobuf enum {@code qhx.proto.weve.FrameType}
 */
public enum FrameType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>FRAME_TYPE_UNKNOWN = 0;</code>
   */
  FRAME_TYPE_UNKNOWN(0),
  /**
   * <pre>
   * 北-东-下（North-East-Down），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_NED = 1;</code>
   */
  FRAME_TYPE_REF_NED(1),
  /**
   * <pre>
   * 东-北-上（East-North-Up），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_ENU = 2;</code>
   */
  FRAME_TYPE_REF_ENU(2),
  /**
   * <pre>
   * 前-右-下（Front-Right-Down），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_FRD = 3;</code>
   */
  FRAME_TYPE_REF_FRD(3),
  /**
   * <pre>
   * 前-左-上（Front-Left-Up），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_FLU = 4;</code>
   */
  FRAME_TYPE_REF_FLU(4),
  /**
   * <pre>
   * GCJ-02，国测局坐标系，"火星坐标系"，椭球面，加扰经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_GCJ02 = 110;</code>
   */
  FRAME_TYPE_GCJ02(110),
  /**
   * <pre>
   * BD-09-LL，百度地图经纬度坐标系，椭球面，加扰经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_BD09LL = 120;</code>
   */
  FRAME_TYPE_BD09LL(120),
  /**
   * <pre>
   * WGS-84，World Geodetic System 1984，世界大地测量系统，椭球面，经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84 = 4326;</code>
   */
  FRAME_TYPE_WGS84(4326),
  /**
   * <pre>
   * WGS-84 地心地固坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_ECEF = 4978;</code>
   */
  FRAME_TYPE_WGS84_ECEF(4978),
  /**
   * <pre>
   * WGS-84 世界墨卡托投影坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_WORLD_MERCATOR = 3395;</code>
   */
  FRAME_TYPE_WGS84_WORLD_MERCATOR(3395),
  /**
   * <pre>
   * WGS-84 Web墨卡托（伪墨卡托）投影坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_WEB_MERCATOR = 3857;</code>
   */
  FRAME_TYPE_WGS84_WEB_MERCATOR(3857),
  /**
   * <pre>
   * CGCS2000，中国国家大地坐标系统 2000，椭球面，经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_CGCS2000 = 4490;</code>
   */
  FRAME_TYPE_CGCS2000(4490),
  /**
   * <pre>
   * CGCS2000 地心地固坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_CGCS2000_ECEF = 4479;</code>
   */
  FRAME_TYPE_CGCS2000_ECEF(4479),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>FRAME_TYPE_UNKNOWN = 0;</code>
   */
  public static final int FRAME_TYPE_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * 北-东-下（North-East-Down），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_NED = 1;</code>
   */
  public static final int FRAME_TYPE_REF_NED_VALUE = 1;
  /**
   * <pre>
   * 东-北-上（East-North-Up），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_ENU = 2;</code>
   */
  public static final int FRAME_TYPE_REF_ENU_VALUE = 2;
  /**
   * <pre>
   * 前-右-下（Front-Right-Down），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_FRD = 3;</code>
   */
  public static final int FRAME_TYPE_REF_FRD_VALUE = 3;
  /**
   * <pre>
   * 前-左-上（Front-Left-Up），笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_REF_FLU = 4;</code>
   */
  public static final int FRAME_TYPE_REF_FLU_VALUE = 4;
  /**
   * <pre>
   * GCJ-02，国测局坐标系，"火星坐标系"，椭球面，加扰经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_GCJ02 = 110;</code>
   */
  public static final int FRAME_TYPE_GCJ02_VALUE = 110;
  /**
   * <pre>
   * BD-09-LL，百度地图经纬度坐标系，椭球面，加扰经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_BD09LL = 120;</code>
   */
  public static final int FRAME_TYPE_BD09LL_VALUE = 120;
  /**
   * <pre>
   * WGS-84，World Geodetic System 1984，世界大地测量系统，椭球面，经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84 = 4326;</code>
   */
  public static final int FRAME_TYPE_WGS84_VALUE = 4326;
  /**
   * <pre>
   * WGS-84 地心地固坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_ECEF = 4978;</code>
   */
  public static final int FRAME_TYPE_WGS84_ECEF_VALUE = 4978;
  /**
   * <pre>
   * WGS-84 世界墨卡托投影坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_WORLD_MERCATOR = 3395;</code>
   */
  public static final int FRAME_TYPE_WGS84_WORLD_MERCATOR_VALUE = 3395;
  /**
   * <pre>
   * WGS-84 Web墨卡托（伪墨卡托）投影坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_WGS84_WEB_MERCATOR = 3857;</code>
   */
  public static final int FRAME_TYPE_WGS84_WEB_MERCATOR_VALUE = 3857;
  /**
   * <pre>
   * CGCS2000，中国国家大地坐标系统 2000，椭球面，经纬度
   * </pre>
   *
   * <code>FRAME_TYPE_CGCS2000 = 4490;</code>
   */
  public static final int FRAME_TYPE_CGCS2000_VALUE = 4490;
  /**
   * <pre>
   * CGCS2000 地心地固坐标系，笛卡尔，米
   * </pre>
   *
   * <code>FRAME_TYPE_CGCS2000_ECEF = 4479;</code>
   */
  public static final int FRAME_TYPE_CGCS2000_ECEF_VALUE = 4479;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static FrameType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FrameType forNumber(int value) {
    switch (value) {
      case 0: return FRAME_TYPE_UNKNOWN;
      case 1: return FRAME_TYPE_REF_NED;
      case 2: return FRAME_TYPE_REF_ENU;
      case 3: return FRAME_TYPE_REF_FRD;
      case 4: return FRAME_TYPE_REF_FLU;
      case 110: return FRAME_TYPE_GCJ02;
      case 120: return FRAME_TYPE_BD09LL;
      case 4326: return FRAME_TYPE_WGS84;
      case 4978: return FRAME_TYPE_WGS84_ECEF;
      case 3395: return FRAME_TYPE_WGS84_WORLD_MERCATOR;
      case 3857: return FRAME_TYPE_WGS84_WEB_MERCATOR;
      case 4490: return FRAME_TYPE_CGCS2000;
      case 4479: return FRAME_TYPE_CGCS2000_ECEF;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FrameType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FrameType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FrameType>() {
          public FrameType findValueByNumber(int number) {
            return FrameType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Geo.getDescriptor().getEnumTypes().get(1);
  }

  private static final FrameType[] VALUES = values();

  public static FrameType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FrameType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:qhx.proto.weve.FrameType)
}

