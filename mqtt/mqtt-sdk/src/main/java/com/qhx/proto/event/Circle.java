// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: geo.proto

package com.qhx.proto.event;

/**
 * <pre>
 * 圆
 * </pre>
 *
 * Protobuf type {@code qhx.proto.weve.Circle}
 */
public final class Circle extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:qhx.proto.weve.Circle)
    CircleOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Circle.newBuilder() to construct.
  private Circle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Circle() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Circle();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Circle(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            Point.Builder subBuilder = null;
            if (origin_ != null) {
              subBuilder = origin_.toBuilder();
            }
            origin_ = input.readMessage(Point.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(origin_);
              origin_ = subBuilder.buildPartial();
            }

            break;
          }
          case 17: {

            radius_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Geo.internal_static_qhx_proto_weve_Circle_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Geo.internal_static_qhx_proto_weve_Circle_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Circle.class, Builder.class);
  }

  public static final int ORIGIN_FIELD_NUMBER = 1;
  private Point origin_;
  /**
   * <code>.qhx.proto.weve.Point origin = 1;</code>
   * @return Whether the origin field is set.
   */
  @Override
  public boolean hasOrigin() {
    return origin_ != null;
  }
  /**
   * <code>.qhx.proto.weve.Point origin = 1;</code>
   * @return The origin.
   */
  @Override
  public Point getOrigin() {
    return origin_ == null ? Point.getDefaultInstance() : origin_;
  }
  /**
   * <code>.qhx.proto.weve.Point origin = 1;</code>
   */
  @Override
  public PointOrBuilder getOriginOrBuilder() {
    return getOrigin();
  }

  public static final int RADIUS_FIELD_NUMBER = 2;
  private double radius_;
  /**
   * <code>double radius = 2;</code>
   * @return The radius.
   */
  @Override
  public double getRadius() {
    return radius_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (origin_ != null) {
      output.writeMessage(1, getOrigin());
    }
    if (radius_ != 0D) {
      output.writeDouble(2, radius_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (origin_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getOrigin());
    }
    if (radius_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, radius_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Circle)) {
      return super.equals(obj);
    }
    Circle other = (Circle) obj;

    if (hasOrigin() != other.hasOrigin()) return false;
    if (hasOrigin()) {
      if (!getOrigin()
          .equals(other.getOrigin())) return false;
    }
    if (Double.doubleToLongBits(getRadius())
        != Double.doubleToLongBits(
            other.getRadius())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasOrigin()) {
      hash = (37 * hash) + ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getOrigin().hashCode();
    }
    hash = (37 * hash) + RADIUS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        Double.doubleToLongBits(getRadius()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Circle parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Circle parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Circle parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Circle parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Circle parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Circle parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Circle parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Circle parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Circle parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Circle parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Circle parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Circle parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Circle prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 圆
   * </pre>
   *
   * Protobuf type {@code qhx.proto.weve.Circle}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:qhx.proto.weve.Circle)
          CircleOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Geo.internal_static_qhx_proto_weve_Circle_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Geo.internal_static_qhx_proto_weve_Circle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Circle.class, Builder.class);
    }

    // Construct using com.qhx.proto.event.Circle.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (originBuilder_ == null) {
        origin_ = null;
      } else {
        origin_ = null;
        originBuilder_ = null;
      }
      radius_ = 0D;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Geo.internal_static_qhx_proto_weve_Circle_descriptor;
    }

    @Override
    public Circle getDefaultInstanceForType() {
      return Circle.getDefaultInstance();
    }

    @Override
    public Circle build() {
      Circle result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Circle buildPartial() {
      Circle result = new Circle(this);
      if (originBuilder_ == null) {
        result.origin_ = origin_;
      } else {
        result.origin_ = originBuilder_.build();
      }
      result.radius_ = radius_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Circle) {
        return mergeFrom((Circle)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Circle other) {
      if (other == Circle.getDefaultInstance()) return this;
      if (other.hasOrigin()) {
        mergeOrigin(other.getOrigin());
      }
      if (other.getRadius() != 0D) {
        setRadius(other.getRadius());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Circle parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (Circle) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private Point origin_;
    private com.google.protobuf.SingleFieldBuilderV3<
            Point, Point.Builder, PointOrBuilder> originBuilder_;
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     * @return Whether the origin field is set.
     */
    public boolean hasOrigin() {
      return originBuilder_ != null || origin_ != null;
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     * @return The origin.
     */
    public Point getOrigin() {
      if (originBuilder_ == null) {
        return origin_ == null ? Point.getDefaultInstance() : origin_;
      } else {
        return originBuilder_.getMessage();
      }
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public Builder setOrigin(Point value) {
      if (originBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        origin_ = value;
        onChanged();
      } else {
        originBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public Builder setOrigin(
        Point.Builder builderForValue) {
      if (originBuilder_ == null) {
        origin_ = builderForValue.build();
        onChanged();
      } else {
        originBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public Builder mergeOrigin(Point value) {
      if (originBuilder_ == null) {
        if (origin_ != null) {
          origin_ =
            Point.newBuilder(origin_).mergeFrom(value).buildPartial();
        } else {
          origin_ = value;
        }
        onChanged();
      } else {
        originBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public Builder clearOrigin() {
      if (originBuilder_ == null) {
        origin_ = null;
        onChanged();
      } else {
        origin_ = null;
        originBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public Point.Builder getOriginBuilder() {
      
      onChanged();
      return getOriginFieldBuilder().getBuilder();
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    public PointOrBuilder getOriginOrBuilder() {
      if (originBuilder_ != null) {
        return originBuilder_.getMessageOrBuilder();
      } else {
        return origin_ == null ?
            Point.getDefaultInstance() : origin_;
      }
    }
    /**
     * <code>.qhx.proto.weve.Point origin = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            Point, Point.Builder, PointOrBuilder>
        getOriginFieldBuilder() {
      if (originBuilder_ == null) {
        originBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                Point, Point.Builder, PointOrBuilder>(
                getOrigin(),
                getParentForChildren(),
                isClean());
        origin_ = null;
      }
      return originBuilder_;
    }

    private double radius_ ;
    /**
     * <code>double radius = 2;</code>
     * @return The radius.
     */
    @Override
    public double getRadius() {
      return radius_;
    }
    /**
     * <code>double radius = 2;</code>
     * @param value The radius to set.
     * @return This builder for chaining.
     */
    public Builder setRadius(double value) {
      
      radius_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double radius = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRadius() {
      
      radius_ = 0D;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:qhx.proto.weve.Circle)
  }

  // @@protoc_insertion_point(class_scope:qhx.proto.weve.Circle)
  private static final Circle DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Circle();
  }

  public static Circle getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Circle>
      PARSER = new com.google.protobuf.AbstractParser<Circle>() {
    @Override
    public Circle parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Circle(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Circle> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Circle> getParserForType() {
    return PARSER;
  }

  @Override
  public Circle getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

