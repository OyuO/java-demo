// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spray_event.proto

package com.qhx.proto.event;

/**
 * <pre>
 * 像素
 * </pre>
 *
 * Protobuf enum {@code qhx.proto.weve.event.spray.SprayEventSprayImagePixelType}
 */
public enum SprayEventSprayImagePixelType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * OPENCV CV_8UC1, uchar 单通道
   * </pre>
   *
   * <code>TYPE_8UC1 = 0;</code>
   */
  TYPE_8UC1(0),
  /**
   * <pre>
   * OPENCV CV_8UC3, uchar 三通道
   * </pre>
   *
   * <code>TYPE_8UC3 = 1;</code>
   */
  TYPE_8UC3(1),
  /**
   * <pre>
   * OPENCV CV_32FC1, float 单通道
   * </pre>
   *
   * <code>TYPE_32FC1 = 2;</code>
   */
  TYPE_32FC1(2),
  /**
   * <pre>
   * OPENCV CV_32FC3, float 三通道
   * </pre>
   *
   * <code>TYPE_32FC3 = 3;</code>
   */
  TYPE_32FC3(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * OPENCV CV_8UC1, uchar 单通道
   * </pre>
   *
   * <code>TYPE_8UC1 = 0;</code>
   */
  public static final int TYPE_8UC1_VALUE = 0;
  /**
   * <pre>
   * OPENCV CV_8UC3, uchar 三通道
   * </pre>
   *
   * <code>TYPE_8UC3 = 1;</code>
   */
  public static final int TYPE_8UC3_VALUE = 1;
  /**
   * <pre>
   * OPENCV CV_32FC1, float 单通道
   * </pre>
   *
   * <code>TYPE_32FC1 = 2;</code>
   */
  public static final int TYPE_32FC1_VALUE = 2;
  /**
   * <pre>
   * OPENCV CV_32FC3, float 三通道
   * </pre>
   *
   * <code>TYPE_32FC3 = 3;</code>
   */
  public static final int TYPE_32FC3_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static SprayEventSprayImagePixelType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static SprayEventSprayImagePixelType forNumber(int value) {
    switch (value) {
      case 0: return TYPE_8UC1;
      case 1: return TYPE_8UC3;
      case 2: return TYPE_32FC1;
      case 3: return TYPE_32FC3;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SprayEventSprayImagePixelType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SprayEventSprayImagePixelType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SprayEventSprayImagePixelType>() {
          public SprayEventSprayImagePixelType findValueByNumber(int number) {
            return SprayEventSprayImagePixelType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return SprayEventOuterClass.getDescriptor().getEnumTypes().get(3);
  }

  private static final SprayEventSprayImagePixelType[] VALUES = values();

  public static SprayEventSprayImagePixelType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SprayEventSprayImagePixelType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:qhx.proto.weve.event.spray.SprayEventSprayImagePixelType)
}

