// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spray_event.proto

package com.qhx.proto.event;

/**
 * <pre>
 * 图像数据消息
 * </pre>
 *
 * Protobuf type {@code qhx.proto.weve.event.spray.SprayEventImage}
 */
public final class SprayEventImage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:qhx.proto.weve.event.spray.SprayEventImage)
    SprayEventImageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SprayEventImage.newBuilder() to construct.
  private SprayEventImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SprayEventImage() {
    format_ = 0;
    data_ = com.google.protobuf.ByteString.EMPTY;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new SprayEventImage();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SprayEventImage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            format_ = rawValue;
            break;
          }
          case 16: {

            seq_ = input.readUInt32();
            break;
          }
          case 24: {

            rows_ = input.readUInt32();
            break;
          }
          case 32: {

            cols_ = input.readUInt32();
            break;
          }
          case 40: {

            pixelType_ = input.readUInt32();
            break;
          }
          case 48: {

            pixelSize_ = input.readUInt32();
            break;
          }
          case 56: {

            imageSize_ = input.readUInt32();
            break;
          }
          case 66: {

            data_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return SprayEventOuterClass.internal_static_qhx_proto_weve_event_spray_SprayEventImage_descriptor;
  }

  @Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return SprayEventOuterClass.internal_static_qhx_proto_weve_event_spray_SprayEventImage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            SprayEventImage.class, Builder.class);
  }

  public static final int FORMAT_FIELD_NUMBER = 1;
  private int format_;
  /**
   * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
   * @return The enum numeric value on the wire for format.
   */
  @Override public int getFormatValue() {
    return format_;
  }
  /**
   * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
   * @return The format.
   */
  @Override public SprayEventSprayImageFormat getFormat() {
    @SuppressWarnings("deprecation")
    SprayEventSprayImageFormat result = SprayEventSprayImageFormat.valueOf(format_);
    return result == null ? SprayEventSprayImageFormat.UNRECOGNIZED : result;
  }

  public static final int SEQ_FIELD_NUMBER = 2;
  private int seq_;
  /**
   * <pre>
   * 帧数
   * </pre>
   *
   * <code>uint32 seq = 2;</code>
   * @return The seq.
   */
  @Override
  public int getSeq() {
    return seq_;
  }

  public static final int ROWS_FIELD_NUMBER = 3;
  private int rows_;
  /**
   * <pre>
   * 高/行数
   * </pre>
   *
   * <code>uint32 rows = 3;</code>
   * @return The rows.
   */
  @Override
  public int getRows() {
    return rows_;
  }

  public static final int COLS_FIELD_NUMBER = 4;
  private int cols_;
  /**
   * <pre>
   * 宽/列数
   * </pre>
   *
   * <code>uint32 cols = 4;</code>
   * @return The cols.
   */
  @Override
  public int getCols() {
    return cols_;
  }

  public static final int PIXEL_TYPE_FIELD_NUMBER = 5;
  private int pixelType_;
  /**
   * <pre>
   * 类型
   * </pre>
   *
   * <code>uint32 pixel_type = 5;</code>
   * @return The pixelType.
   */
  @Override
  public int getPixelType() {
    return pixelType_;
  }

  public static final int PIXEL_SIZE_FIELD_NUMBER = 6;
  private int pixelSize_;
  /**
   * <pre>
   * 单个像素所有通道的元素大小
   * </pre>
   *
   * <code>uint32 pixel_size = 6;</code>
   * @return The pixelSize.
   */
  @Override
  public int getPixelSize() {
    return pixelSize_;
  }

  public static final int IMAGE_SIZE_FIELD_NUMBER = 7;
  private int imageSize_;
  /**
   * <pre>
   * 图像大小，仅传输压缩图像有效
   * </pre>
   *
   * <code>uint32 image_size = 7;</code>
   * @return The imageSize.
   */
  @Override
  public int getImageSize() {
    return imageSize_;
  }

  public static final int DATA_FIELD_NUMBER = 8;
  private com.google.protobuf.ByteString data_;
  /**
   * <pre>
   * 图像数据
   * </pre>
   *
   * <code>bytes data = 8;</code>
   * @return The data.
   */
  @Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (format_ != SprayEventSprayImageFormat.SPRAY_IMAGE_RAW.getNumber()) {
      output.writeEnum(1, format_);
    }
    if (seq_ != 0) {
      output.writeUInt32(2, seq_);
    }
    if (rows_ != 0) {
      output.writeUInt32(3, rows_);
    }
    if (cols_ != 0) {
      output.writeUInt32(4, cols_);
    }
    if (pixelType_ != 0) {
      output.writeUInt32(5, pixelType_);
    }
    if (pixelSize_ != 0) {
      output.writeUInt32(6, pixelSize_);
    }
    if (imageSize_ != 0) {
      output.writeUInt32(7, imageSize_);
    }
    if (!data_.isEmpty()) {
      output.writeBytes(8, data_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (format_ != SprayEventSprayImageFormat.SPRAY_IMAGE_RAW.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, format_);
    }
    if (seq_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, seq_);
    }
    if (rows_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, rows_);
    }
    if (cols_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, cols_);
    }
    if (pixelType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, pixelType_);
    }
    if (pixelSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(6, pixelSize_);
    }
    if (imageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, imageSize_);
    }
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(8, data_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof SprayEventImage)) {
      return super.equals(obj);
    }
    SprayEventImage other = (SprayEventImage) obj;

    if (format_ != other.format_) return false;
    if (getSeq()
        != other.getSeq()) return false;
    if (getRows()
        != other.getRows()) return false;
    if (getCols()
        != other.getCols()) return false;
    if (getPixelType()
        != other.getPixelType()) return false;
    if (getPixelSize()
        != other.getPixelSize()) return false;
    if (getImageSize()
        != other.getImageSize()) return false;
    if (!getData()
        .equals(other.getData())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FORMAT_FIELD_NUMBER;
    hash = (53 * hash) + format_;
    hash = (37 * hash) + SEQ_FIELD_NUMBER;
    hash = (53 * hash) + getSeq();
    hash = (37 * hash) + ROWS_FIELD_NUMBER;
    hash = (53 * hash) + getRows();
    hash = (37 * hash) + COLS_FIELD_NUMBER;
    hash = (53 * hash) + getCols();
    hash = (37 * hash) + PIXEL_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getPixelType();
    hash = (37 * hash) + PIXEL_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPixelSize();
    hash = (37 * hash) + IMAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getImageSize();
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static SprayEventImage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SprayEventImage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SprayEventImage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SprayEventImage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SprayEventImage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static SprayEventImage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static SprayEventImage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SprayEventImage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static SprayEventImage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static SprayEventImage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static SprayEventImage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static SprayEventImage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(SprayEventImage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 图像数据消息
   * </pre>
   *
   * Protobuf type {@code qhx.proto.weve.event.spray.SprayEventImage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:qhx.proto.weve.event.spray.SprayEventImage)
          SprayEventImageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SprayEventOuterClass.internal_static_qhx_proto_weve_event_spray_SprayEventImage_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SprayEventOuterClass.internal_static_qhx_proto_weve_event_spray_SprayEventImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SprayEventImage.class, Builder.class);
    }

    // Construct using com.qhx.proto.event.SprayEventImage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      format_ = 0;

      seq_ = 0;

      rows_ = 0;

      cols_ = 0;

      pixelType_ = 0;

      pixelSize_ = 0;

      imageSize_ = 0;

      data_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return SprayEventOuterClass.internal_static_qhx_proto_weve_event_spray_SprayEventImage_descriptor;
    }

    @Override
    public SprayEventImage getDefaultInstanceForType() {
      return SprayEventImage.getDefaultInstance();
    }

    @Override
    public SprayEventImage build() {
      SprayEventImage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public SprayEventImage buildPartial() {
      SprayEventImage result = new SprayEventImage(this);
      result.format_ = format_;
      result.seq_ = seq_;
      result.rows_ = rows_;
      result.cols_ = cols_;
      result.pixelType_ = pixelType_;
      result.pixelSize_ = pixelSize_;
      result.imageSize_ = imageSize_;
      result.data_ = data_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof SprayEventImage) {
        return mergeFrom((SprayEventImage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(SprayEventImage other) {
      if (other == SprayEventImage.getDefaultInstance()) return this;
      if (other.format_ != 0) {
        setFormatValue(other.getFormatValue());
      }
      if (other.getSeq() != 0) {
        setSeq(other.getSeq());
      }
      if (other.getRows() != 0) {
        setRows(other.getRows());
      }
      if (other.getCols() != 0) {
        setCols(other.getCols());
      }
      if (other.getPixelType() != 0) {
        setPixelType(other.getPixelType());
      }
      if (other.getPixelSize() != 0) {
        setPixelSize(other.getPixelSize());
      }
      if (other.getImageSize() != 0) {
        setImageSize(other.getImageSize());
      }
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      SprayEventImage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (SprayEventImage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int format_ = 0;
    /**
     * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
     * @return The enum numeric value on the wire for format.
     */
    @Override public int getFormatValue() {
      return format_;
    }
    /**
     * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
     * @param value The enum numeric value on the wire for format to set.
     * @return This builder for chaining.
     */
    public Builder setFormatValue(int value) {
      
      format_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
     * @return The format.
     */
    @Override
    public SprayEventSprayImageFormat getFormat() {
      @SuppressWarnings("deprecation")
      SprayEventSprayImageFormat result = SprayEventSprayImageFormat.valueOf(format_);
      return result == null ? SprayEventSprayImageFormat.UNRECOGNIZED : result;
    }
    /**
     * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(SprayEventSprayImageFormat value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      format_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.qhx.proto.weve.event.spray.SprayEventSprayImageFormat format = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      
      format_ = 0;
      onChanged();
      return this;
    }

    private int seq_ ;
    /**
     * <pre>
     * 帧数
     * </pre>
     *
     * <code>uint32 seq = 2;</code>
     * @return The seq.
     */
    @Override
    public int getSeq() {
      return seq_;
    }
    /**
     * <pre>
     * 帧数
     * </pre>
     *
     * <code>uint32 seq = 2;</code>
     * @param value The seq to set.
     * @return This builder for chaining.
     */
    public Builder setSeq(int value) {
      
      seq_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 帧数
     * </pre>
     *
     * <code>uint32 seq = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeq() {
      
      seq_ = 0;
      onChanged();
      return this;
    }

    private int rows_ ;
    /**
     * <pre>
     * 高/行数
     * </pre>
     *
     * <code>uint32 rows = 3;</code>
     * @return The rows.
     */
    @Override
    public int getRows() {
      return rows_;
    }
    /**
     * <pre>
     * 高/行数
     * </pre>
     *
     * <code>uint32 rows = 3;</code>
     * @param value The rows to set.
     * @return This builder for chaining.
     */
    public Builder setRows(int value) {
      
      rows_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 高/行数
     * </pre>
     *
     * <code>uint32 rows = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRows() {
      
      rows_ = 0;
      onChanged();
      return this;
    }

    private int cols_ ;
    /**
     * <pre>
     * 宽/列数
     * </pre>
     *
     * <code>uint32 cols = 4;</code>
     * @return The cols.
     */
    @Override
    public int getCols() {
      return cols_;
    }
    /**
     * <pre>
     * 宽/列数
     * </pre>
     *
     * <code>uint32 cols = 4;</code>
     * @param value The cols to set.
     * @return This builder for chaining.
     */
    public Builder setCols(int value) {
      
      cols_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 宽/列数
     * </pre>
     *
     * <code>uint32 cols = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCols() {
      
      cols_ = 0;
      onChanged();
      return this;
    }

    private int pixelType_ ;
    /**
     * <pre>
     * 类型
     * </pre>
     *
     * <code>uint32 pixel_type = 5;</code>
     * @return The pixelType.
     */
    @Override
    public int getPixelType() {
      return pixelType_;
    }
    /**
     * <pre>
     * 类型
     * </pre>
     *
     * <code>uint32 pixel_type = 5;</code>
     * @param value The pixelType to set.
     * @return This builder for chaining.
     */
    public Builder setPixelType(int value) {
      
      pixelType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 类型
     * </pre>
     *
     * <code>uint32 pixel_type = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPixelType() {
      
      pixelType_ = 0;
      onChanged();
      return this;
    }

    private int pixelSize_ ;
    /**
     * <pre>
     * 单个像素所有通道的元素大小
     * </pre>
     *
     * <code>uint32 pixel_size = 6;</code>
     * @return The pixelSize.
     */
    @Override
    public int getPixelSize() {
      return pixelSize_;
    }
    /**
     * <pre>
     * 单个像素所有通道的元素大小
     * </pre>
     *
     * <code>uint32 pixel_size = 6;</code>
     * @param value The pixelSize to set.
     * @return This builder for chaining.
     */
    public Builder setPixelSize(int value) {
      
      pixelSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 单个像素所有通道的元素大小
     * </pre>
     *
     * <code>uint32 pixel_size = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPixelSize() {
      
      pixelSize_ = 0;
      onChanged();
      return this;
    }

    private int imageSize_ ;
    /**
     * <pre>
     * 图像大小，仅传输压缩图像有效
     * </pre>
     *
     * <code>uint32 image_size = 7;</code>
     * @return The imageSize.
     */
    @Override
    public int getImageSize() {
      return imageSize_;
    }
    /**
     * <pre>
     * 图像大小，仅传输压缩图像有效
     * </pre>
     *
     * <code>uint32 image_size = 7;</code>
     * @param value The imageSize to set.
     * @return This builder for chaining.
     */
    public Builder setImageSize(int value) {
      
      imageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图像大小，仅传输压缩图像有效
     * </pre>
     *
     * <code>uint32 image_size = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearImageSize() {
      
      imageSize_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 图像数据
     * </pre>
     *
     * <code>bytes data = 8;</code>
     * @return The data.
     */
    @Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * 图像数据
     * </pre>
     *
     * <code>bytes data = 8;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图像数据
     * </pre>
     *
     * <code>bytes data = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:qhx.proto.weve.event.spray.SprayEventImage)
  }

  // @@protoc_insertion_point(class_scope:qhx.proto.weve.event.spray.SprayEventImage)
  private static final SprayEventImage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new SprayEventImage();
  }

  public static SprayEventImage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SprayEventImage>
      PARSER = new com.google.protobuf.AbstractParser<SprayEventImage>() {
    @Override
    public SprayEventImage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SprayEventImage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SprayEventImage> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<SprayEventImage> getParserForType() {
    return PARSER;
  }

  @Override
  public SprayEventImage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

